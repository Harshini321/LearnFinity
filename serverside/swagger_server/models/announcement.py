# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Announcement(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, title: str=None, body: str=None, staticfile_id: str=None, course_id: int=None, author_id: int=None, created_at: str=None):  # noqa: E501
        """Announcement - a model defined in Swagger

        :param id: The id of this Announcement.  # noqa: E501
        :type id: int
        :param title: The title of this Announcement.  # noqa: E501
        :type title: str
        :param body: The body of this Announcement.  # noqa: E501
        :type body: str
        :param staticfile_id: The staticfile_id of this Announcement.  # noqa: E501
        :type staticfile_id: str
        :param course_id: The course_id of this Announcement.  # noqa: E501
        :type course_id: int
        :param author_id: The author_id of this Announcement.  # noqa: E501
        :type author_id: int
        :param created_at: The created_at of this Announcement.  # noqa: E501
        :type created_at: str
        """
        self.swagger_types = {
            'id': int,
            'title': str,
            'body': str,
            'staticfile_id': str,
            'course_id': int,
            'author_id': int,
            'created_at': str
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'body': 'body',
            'staticfile_id': 'staticfile_id',
            'course_id': 'course_id',
            'author_id': 'author_id',
            'created_at': 'createdAt'
        }
        self._id = id
        self._title = title
        self._body = body
        self._staticfile_id = staticfile_id
        self._course_id = course_id
        self._author_id = author_id
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'Announcement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Announcement of this Announcement.  # noqa: E501
        :rtype: Announcement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Announcement.


        :return: The id of this Announcement.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Announcement.


        :param id: The id of this Announcement.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Announcement.


        :return: The title of this Announcement.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Announcement.


        :param title: The title of this Announcement.
        :type title: str
        """

        self._title = title

    @property
    def body(self) -> str:
        """Gets the body of this Announcement.


        :return: The body of this Announcement.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body: str):
        """Sets the body of this Announcement.


        :param body: The body of this Announcement.
        :type body: str
        """

        self._body = body

    @property
    def staticfile_id(self) -> str:
        """Gets the staticfile_id of this Announcement.


        :return: The staticfile_id of this Announcement.
        :rtype: str
        """
        return self._staticfile_id

    @staticfile_id.setter
    def staticfile_id(self, staticfile_id: str):
        """Sets the staticfile_id of this Announcement.


        :param staticfile_id: The staticfile_id of this Announcement.
        :type staticfile_id: str
        """

        self._staticfile_id = staticfile_id

    @property
    def course_id(self) -> int:
        """Gets the course_id of this Announcement.


        :return: The course_id of this Announcement.
        :rtype: int
        """
        return self._course_id

    @course_id.setter
    def course_id(self, course_id: int):
        """Sets the course_id of this Announcement.


        :param course_id: The course_id of this Announcement.
        :type course_id: int
        """

        self._course_id = course_id

    @property
    def author_id(self) -> int:
        """Gets the author_id of this Announcement.


        :return: The author_id of this Announcement.
        :rtype: int
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id: int):
        """Sets the author_id of this Announcement.


        :param author_id: The author_id of this Announcement.
        :type author_id: int
        """

        self._author_id = author_id

    @property
    def created_at(self) -> str:
        """Gets the created_at of this Announcement.


        :return: The created_at of this Announcement.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this Announcement.


        :param created_at: The created_at of this Announcement.
        :type created_at: str
        """

        self._created_at = created_at
