openapi: 3.0.0
info:
  title: Learnfinity API
  description: API Documentation for Learnfinity
  version: 1.0.0
servers:
- url: /
tags:
- name: auth
  description: endpoints for authentication
- name: static_files
  description: endpoints for static files
- name: user
  description: endpoints for user model
- name: announcement
  description: endpoints for announcement
- name: courses
  description: endpoints for courses
- name: evaluation
  description: endpoints for evaluation
- name: grades
  description: endpoints for grades
- name: submission
  description: endpoints for submission
- name: slots
  description: endpoints for slots
- name: entries
  description: endpoints for entries
- name: post
  description: endpoints for post
- name: comment
  description: endpoints for comment
paths:
  /signup:
    post:
      tags:
      - auth
      summary: Signup a new user
      operationId: signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-signup'
        required: true
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /signin:
    post:
      tags:
      - auth
      summary: Signin an existing user
      operationId: signin_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-signin'
        required: true
      responses:
        "201":
          description: User logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /forgotpwd:
    post:
      tags:
      - auth
      summary: Reset password
      operationId: forgotpwd_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-email'
        required: true
      responses:
        "201":
          description: Password reset
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /logout:
    post:
      tags:
      - auth
      summary: User logged out
      operationId: logout_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-email'
        required: true
      responses:
        default:
          description: User logged out
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /static/{id}:
    get:
      tags:
      - static_files
      summary: Get static file object
      operationId: static_id_get
      parameters:
      - name: id
        in: path
        description: id of static file object
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Static file object is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/static_files'
      x-openapi-router-controller: swagger_server.controllers.static_files_controller
  /static:
    post:
      tags:
      - static_files
      summary: Upload media and create new static file object
      operationId: static_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/static_files-create'
        required: true
      responses:
        "201":
          description: New static file object created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/static_files'
      x-openapi-router-controller: swagger_server.controllers.static_files_controller
  /static/delete:
    post:
      tags:
      - static_files
      summary: Delete static file object
      operationId: static_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/static_files-id'
        required: true
      responses:
        "201":
          description: Static file object deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/static_files'
      x-openapi-router-controller: swagger_server.controllers.static_files_controller
  /user:
    get:
      tags:
      - user
      summary: Get all details related to the authorised user
      operationId: user_get
      responses:
        "200":
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/profilepic:
    get:
      tags:
      - user
      summary: Get profile picture of the authorised user
      operationId: user_profilepic_get
      responses:
        "200":
          description: Link to user profile picture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-profile_pic'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/isAuthenticated:
    get:
      tags:
      - user
      summary: Checks whether there an authenticated user
      operationId: user_is_authenticated_get
      responses:
        "200":
          description: Returns user authentication status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-is_authenticated'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/changepic:
    post:
      tags:
      - user
      summary: Change user profile picture
      operationId: user_changepic_post
      requestBody:
        content:
          'multipart/form-data:':
            schema:
              $ref: '#/components/schemas/User-profile_pic-change'
        required: true
      responses:
        "201":
          description: Returns new user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /announcement:
    get:
      tags:
      - announcement
      summary: Get all announcements for all the courses user is enrolled in
      operationId: announcement_get
      responses:
        "200":
          description: All announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.announcement_controller
    post:
      tags:
      - announcement
      summary: Create a new annoncement
      operationId: announcement_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement-create'
        required: true
      responses:
        "201":
          description: New announcement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
      x-openapi-router-controller: swagger_server.controllers.announcement_controller
  /announcement/unread:
    get:
      tags:
      - announcement
      summary: Get unread announcements for all courses the user is enrolled in
      operationId: announcement_unread_get
      responses:
        "200":
          description: All unread announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.announcement_controller
  /announcement/{course_id}:
    get:
      tags:
      - announcement
      summary: Get all announcements for the course specified
      operationId: announcement_course_id_get
      parameters:
      - name: course_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.announcement_controller
  /courses:
    get:
      tags:
      - courses
      summary: Get all courses that the user is enrolled in
      operationId: courses_get
      responses:
        "200":
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.courses_controller
    post:
      tags:
      - courses
      summary: Create a new course *(admin)
      operationId: courses_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses-create'
        required: true
      responses:
        "201":
          description: Newly created course object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/all:
    get:
      tags:
      - courses
      summary: Get all courses in that institute
      operationId: courses_all_get
      responses:
        "200":
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/{year}:
    get:
      tags:
      - courses
      summary: Get all courses in that year
      operationId: courses_year_get
      parameters:
      - name: year
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/{year}/{semester}:
    get:
      tags:
      - courses
      summary: Get all courses in that year
      operationId: courses_year_semester_get
      parameters:
      - name: year
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: semester
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/{year}/{semester}/{slot_id}:
    get:
      tags:
      - courses
      summary: Get all courses in that year
      operationId: courses_year_semester_slot_id_get
      parameters:
      - name: year
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: semester
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: slot_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/edit:
    post:
      tags:
      - courses
      summary: Edit course information *(admin)
      operationId: courses_edit_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses-edit'
        required: true
      responses:
        default:
          description: Course object with edited information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/adduser:
    post:
      tags:
      - courses
      summary: Add a user to the course *(admin & faculty)
      operationId: courses_adduser_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses-user'
        required: true
      responses:
        default:
          description: User added succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course-User'
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /courses/remuser:
    post:
      tags:
      - courses
      summary: Remove a user from the course *(admin & faculty)
      operationId: courses_remuser_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses-user'
        required: true
      responses:
        default:
          description: User removed succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course-User'
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /evaluation:
    get:
      tags:
      - evaluation
      summary: Get all the evaluations from the courses user is enrolled in
      operationId: evaluation_get
      responses:
        "200":
          description: List of evaluations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.evaluation_controller
    post:
      tags:
      - evaluation
      summary: Create an evaluation *(admin & faculty)
      operationId: evaluation_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-create'
        required: true
      responses:
        "201":
          description: Evaluation object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
      x-openapi-router-controller: swagger_server.controllers.evaluation_controller
  /evaluation/{course_id}:
    get:
      tags:
      - evaluation
      summary: Get all the evaluations from the course specified
      operationId: evaluation_course_id_get
      parameters:
      - name: course_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of evaluations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.evaluation_controller
  /evaluation/edit:
    post:
      tags:
      - evaluation
      summary: Edit an evaluation
      operationId: evaluation_edit_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
        required: true
      responses:
        default:
          description: Evaluation object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
      x-openapi-router-controller: swagger_server.controllers.evaluation_controller
  /evaluation/delete:
    post:
      tags:
      - evaluation
      summary: Delete an evaluation
      operationId: evaluation_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-id'
        required: true
      responses:
        default:
          description: Evaluation deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
      x-openapi-router-controller: swagger_server.controllers.evaluation_controller
  /grades:
    get:
      tags:
      - grades
      summary: Get all the grades from all the courses user is enrolled in
      operationId: grades_get
      responses:
        "200":
          description: List of grades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grades'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.grades_controller
  /grades/{course_id}:
    get:
      tags:
      - grades
      summary: Get grades from of that course of the user
      operationId: grades_course_id_get
      parameters:
      - name: course_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Grades of the specified course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grades'
      x-openapi-router-controller: swagger_server.controllers.grades_controller
  /submission:
    post:
      tags:
      - submission
      summary: Make a submission *(student)
      operationId: submission_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission-create'
        required: true
      responses:
        "201":
          description: Submission object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
      x-openapi-router-controller: swagger_server.controllers.submission_controller
  /submission/{evaluation_id}:
    get:
      tags:
      - submission
      summary: Get submission of a user for an evaluation
      operationId: submission_evaluation_id_get
      parameters:
      - name: evaluation_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Submission object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
      x-openapi-router-controller: swagger_server.controllers.submission_controller
  /submission/delete/{evaluation_id}:
    get:
      tags:
      - submission
      summary: Delete an evaluation
      operationId: submission_delete_evaluation_id_get
      parameters:
      - name: evaluation_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        default:
          description: Evaluation id deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
      x-openapi-router-controller: swagger_server.controllers.submission_controller
  /submission/grade/{evaluation_id}:
    get:
      tags:
      - submission
      summary: Grade an evaluation
      operationId: submission_grade_evaluation_id_get
      parameters:
      - name: evaluation_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        default:
          description: Evaluation id deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
      x-openapi-router-controller: swagger_server.controllers.submission_controller
  /slots:
    get:
      tags:
      - slots
      summary: Get all slots of the institute of the user
      operationId: slots_get
      responses:
        "200":
          description: List of slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slots'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.slots_controller
    post:
      tags:
      - slots
      summary: Create a new slot for the institute of the user *(admin)
      operationId: slots_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slots-create'
        required: true
      responses:
        "201":
          description: Slot object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
      x-openapi-router-controller: swagger_server.controllers.slots_controller
  /slots/delete:
    post:
      tags:
      - slots
      summary: Delete a slot *(admin)
      operationId: slots_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slots-id'
        required: true
      responses:
        default:
          description: Slot deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
      x-openapi-router-controller: swagger_server.controllers.slots_controller
  /entries:
    get:
      tags:
      - entries
      summary: Get all entries of the institute of the user
      operationId: entries_get
      responses:
        "200":
          description: List of entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entries'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.entries_controller
    post:
      tags:
      - entries
      summary: Create a new entry
      operationId: entries_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entries-create'
        required: true
      responses:
        "201":
          description: New entry object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entries'
      x-openapi-router-controller: swagger_server.controllers.entries_controller
  /entries/delete:
    post:
      tags:
      - entries
      summary: Delete entry
      operationId: entries_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entries-id'
        required: true
      responses:
        default:
          description: New entry object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entries'
      x-openapi-router-controller: swagger_server.controllers.entries_controller
  /post:
    get:
      tags:
      - post
      summary: Get all the posts made by the user
      operationId: post_get
      responses:
        "200":
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.post_controller
    post:
      tags:
      - post
      summary: Create a new post
      operationId: post_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post-create'
        required: true
      responses:
        "201":
          description: List of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      x-openapi-router-controller: swagger_server.controllers.post_controller
  /post/{course_id}:
    get:
      tags:
      - post
      summary: Get all the posts corresponding to a course
      operationId: post_course_id_get
      parameters:
      - name: course_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.post_controller
  /post/{post_id}:
    get:
      tags:
      - post
      summary: Get all the post by postid
      operationId: post_post_id_get
      parameters:
      - name: post_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Post object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      x-openapi-router-controller: swagger_server.controllers.post_controller
  /post/delete:
    post:
      tags:
      - post
      summary: Delete post by postid
      operationId: post_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post-id'
        required: true
      responses:
        default:
          description: Post id deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      x-openapi-router-controller: swagger_server.controllers.post_controller
  /comment/{comment_id}:
    get:
      tags:
      - comment
      summary: Get comment by commentid
      operationId: comment_comment_id_get
      parameters:
      - name: comment_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Comment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-openapi-router-controller: swagger_server.controllers.comment_controller
  /comment/{parentpost_id}:
    get:
      tags:
      - comment
      summary: Get comments by parent post id
      operationId: comment_parentpost_id_get
      parameters:
      - name: parentpost_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.comment_controller
  /comment/{parentcomment_id}:
    get:
      tags:
      - comment
      summary: Get comment by parent comment id
      operationId: comment_parentcomment_id_get
      parameters:
      - name: parentcomment_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.comment_controller
  /comment:
    post:
      tags:
      - comment
      summary: Create a new comment
      operationId: comment_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment-create'
        required: true
      responses:
        "201":
          description: Comment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-openapi-router-controller: swagger_server.controllers.comment_controller
  /comment/delete:
    post:
      tags:
      - comment
      summary: Create a new comment
      operationId: comment_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment-id'
        required: true
      responses:
        "201":
          description: Comment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-openapi-router-controller: swagger_server.controllers.comment_controller
components:
  schemas:
    User:
      type: object
      properties:
        email_id:
          type: string
        insti_id:
          type: integer
        is_Admin:
          type: boolean
        is_Prof:
          type: boolean
        profile_pic:
          type: string
      example:
        email_id: email_id
        is_Prof: true
        profile_pic: profile_pic
        is_Admin: true
        insti_id: 0
    User-signup:
      type: object
      properties:
        email_id:
          type: string
        password:
          type: string
        insti_id:
          type: integer
        is_Prof:
          type: boolean
        profile_pic:
          type: string
    User-signin:
      type: object
      properties:
        email_id:
          type: string
        password:
          type: string
    User-email:
      type: object
      properties:
        email_id:
          type: string
    User-profile_pic:
      type: object
      properties:
        profile_pic:
          type: string
      example:
        profile_pic: profile_pic
    User-profile_pic-change:
      type: object
      properties:
        file: {}
    User-is_authenticated:
      type: object
      properties:
        is_authenticated:
          type: boolean
      example:
        is_authenticated: true
    static_files:
      type: object
      properties:
        id:
          type: integer
        media_url:
          type: string
        metadata:
          type: string
        course_id:
          type: integer
      example:
        course_id: 6
        metadata: metadata
        id: 0
        media_url: media_url
    static_files-id:
      type: object
      properties:
        id:
          type: integer
    static_files-create:
      type: object
      properties:
        file: {}
        metadata:
          type: string
        course_id:
          type: integer
    Announcement:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        staticfile_id:
          type: string
        course_id:
          type: integer
        author_id:
          type: integer
        createdAt:
          type: string
      example:
        course_id: 6
        createdAt: createdAt
        staticfile_id: staticfile_id
        id: 0
        title: title
        body: body
        author_id: 1
    Announcement-create:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        staticfile_id:
          type: integer
        course_id:
          type: integer
    Courses:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        semester:
          type: integer
        year:
          type: integer
        credits:
          type: number
        insti_id:
          type: number
        slot_id:
          type: number
      example:
        year: 1
        credits: 5.962133916683182377482808078639209270477294921875
        slot_id: 2.3021358869347654518833223846741020679473876953125
        name: name
        description: description
        semester: 6
        id: 0
        insti_id: 5.63737665663332876420099637471139430999755859375
    Courses-create:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        semester:
          type: integer
        year:
          type: integer
        credits:
          type: number
        slot_id:
          type: number
    Courses-edit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        semester:
          type: integer
        year:
          type: integer
        credits:
          type: number
        slot_id:
          type: number
    Courses-user:
      type: object
      properties:
        course_id:
          type: number
        user_id:
          type: number
    Course-User:
      type: object
      properties:
        id:
          type: integer
        course_id:
          type: number
        user_id:
          type: number
      example:
        course_id: 6.02745618307040320615897144307382404804229736328125
        user_id: 1.46581298050294517310021547018550336360931396484375
        id: 0
    Evaluation:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        staticfile_id:
          type: string
        deadline:
          type: string
        course_id:
          type: number
        weightage:
          type: number
        total_marks:
          type: number
        submission_allowed:
          type: boolean
      example:
        weightage: 1.46581298050294517310021547018550336360931396484375
        course_id: 6.02745618307040320615897144307382404804229736328125
        total_marks: 5.962133916683182377482808078639209270477294921875
        staticfile_id: staticfile_id
        id: 0
        title: title
        deadline: deadline
        submission_allowed: true
    Evaluation-create:
      type: object
      properties:
        title:
          type: string
        staticfile_id:
          type: string
        deadline:
          type: string
        course_id:
          type: number
        weightage:
          type: number
        total_marks:
          type: number
        submission_allowed:
          type: boolean
    Evaluation-id:
      type: object
      properties:
        id:
          type: integer
    Grades:
      type: object
      properties:
        id:
          type: integer
        grade:
          type: string
        student_id:
          type: number
        course_id:
          type: number
      example:
        course_id: 1.46581298050294517310021547018550336360931396484375
        grade: grade
        student_id: 6.02745618307040320615897144307382404804229736328125
        id: 0
    Submission:
      type: object
      properties:
        id:
          type: integer
        evaluation_id:
          type: number
        student_id:
          type: number
        marks:
          type: number
        staticfile_id:
          type: number
      example:
        evaluation_id: 6.02745618307040320615897144307382404804229736328125
        student_id: 1.46581298050294517310021547018550336360931396484375
        staticfile_id: 5.63737665663332876420099637471139430999755859375
        id: 0
        marks: 5.962133916683182377482808078639209270477294921875
    Submission-create:
      type: object
      properties:
        evaluation_id:
          type: number
        student_id:
          type: number
        staticfile_id:
          type: number
    Slots:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        name: name
        id: 0
    Slots-create:
      type: object
      properties:
        name:
          type: string
    Slots-id:
      type: object
      properties:
        id:
          type: integer
    Entries:
      type: object
      properties:
        id:
          type: integer
        day:
          type: string
        start_time:
          type: string
        end_time:
          type: string
      example:
        start_time: start_time
        end_time: end_time
        id: 0
        day: day
    Entries-create:
      type: object
      properties:
        day:
          type: string
        start_time:
          type: string
        end_time:
          type: string
    Entries-id:
      type: object
      properties:
        id:
          type: integer
    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        staticfile_id:
          type: string
        course_id:
          type: integer
        author_id:
          type: integer
        createdAt:
          type: string
        can_comment:
          type: boolean
      example:
        course_id: 6
        createdAt: createdAt
        can_comment: true
        staticfile_id: staticfile_id
        id: 0
        title: title
        body: body
        author_id: 1
    Post-create:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        staticfile_id:
          type: string
        course_id:
          type: integer
        can_comment:
          type: boolean
    Post-id:
      type: object
      properties:
        id:
          type: integer
    Comment:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        staticfile_id:
          type: string
        parent_post:
          type: number
        parent_comment:
          type: number
        createdAt:
          type: string
      example:
        parent_comment: 1.46581298050294517310021547018550336360931396484375
        createdAt: createdAt
        parent_post: 6.02745618307040320615897144307382404804229736328125
        staticfile_id: staticfile_id
        id: 0
        body: body
    Comment-create:
      type: object
      properties:
        body:
          type: string
        staticfile_id:
          type: string
        parent_post:
          type: number
        parent_comment:
          type: number
    Comment-id:
      type: object
      properties:
        id:
          type: integer

